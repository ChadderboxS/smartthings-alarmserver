/**
 *  DSC Alarm
 *
 *  Author: jeremywindsor@hotmail.com
 *  Date: 09-14-2015
 */
 // for the UI

preferences {
    input("ip", "text", title: "IP", description: "The IP of your alarmserver")
    input("port", "text", title: "Port", description: "The port")
} 
 
metadata {
	// Automatically generated. Make future change here.
	definition (name: "DSC Alarm Away Arm", author: "jeremywindsor@hotmail.com") {
		capability "Switch"

		command "away"
		command "disarm"
		command "stay"
		command "disarm2"
	}

	// simulator metadata
	simulator {
	}

	// UI tile definitions
	tiles {
		standardTile("button", "device.switch", width: 1, height: 1, canChangeIcon: true) {
			state "off", label: 'Arm', action: "switch.on", icon: "st.Home.home4", backgroundColor: "#ccffcc"
			state "on", label: 'Disarm', action: "switch.off", icon: "st.Home.home4", backgroundColor: "#EE0000"

}

		main "button"
		details(["button"])
	}
}

def parse(String description) {
}

def away() {
	//right now do not arm or disarm... 
    //sendCmd("api/alarm/arm")
	//sendEvent(name: "button", value: "away")
	log.debug "Executing 'away'"
	// TODO: handle 'strobe' command
	sendEvent(name: "switch", value: "on");            
}

def on() {
    //right now do not arm or disarm... 
    def result = new physicalgraph.device.HubAction(
        method: "GET",
        path: "/api/alarm/arm",
        headers: [
            HOST: "$ip:$port"
            //HOST: getHostAddress()
        ]
    )
    log.debug "Executing 'arm away'"
	// TODO: handle 'siren' command
	sendEvent(name: "switch", value: "on");  
    return result
}

def disarm() {
	//right now do not arm or disarm... 
    //sendCmd("api/alarm/disarm")
	//sendEvent(name: "button", value: "disarm")
	log.debug "Executing 'disarm'"
	// TODO: handle 'both' command
	sendEvent(name: "switch", value: "off");    
}

def off() {
	//right now do not arm or disarm... 
    def result = new physicalgraph.device.HubAction(
        method: "GET",
        path: "/api/alarm/disarm",
        headers: [
            HOST: "$ip:$port"
            //HOST: getHostAddress()
        ]
    )
	log.debug "Executing 'disarm'"
	// TODO: handle 'both' command
	sendEvent(name: "switch", value: "off");       
    return result
}
